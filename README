ANOTAÇÕES PESSOAIS PÓS CURSO
Link do curso https://www.udemy.com/course/rest-api-flask-and-python/?couponCode=REST_EBOOK_NOV

rodar com -> docker run -dp 5000:5000 -w /app -v "\c\Users\luish\Desktop\flask curso API" flask-smorest-api

Estudar mais SQLAlchemy (em especial as relações um para muitos e muitos para muitos) e Marshmallow(em especial os schemas)

https://flask-sqlalchemy.palletsprojects.com/en/2.x/

https://marshmallow.readthedocs.io/

secrets.SystemRandom().getrandbits(128) -> Gera um hash aleatório de 128 bits.

Estudar migração de dados -> Flask-Migrate --- comando para efetuar as migrações (executa-las em ordem ( a segunda depois de excluir o banco de dados)) -> flask db init, flask db migrate, flask db upgrade
Para atualizar as migracoes -> flask db stamp head, flask db migrate, flask db upgrade

Usar ElephantSQL para rostear o banco de dados


-----------------------------------------------------------------DOCUMENTAÇÃO--------------------------------------------------------------------------------------

A presente API foi implementada usando Flask, flasksmorest, PostgreSQL, migração de dados, e um sistema JWT para efetuar cadastro, login e autenticação da aplicação, além da auto-documentação (graças ao swagger)
Essa API foi construida com base no curso  "REST APIs with Flask and Python in 2022", da plataforma Udemy.
Ainda preciso aprimorar meus conhecimentos para produzir API's mais poderosas utilizando Python ( em especial a segurança em Autenticação, coisa que pretendo me aprofundar mais )

Link para implementação no render.com -> https://flask-smorest-api-kyms.onrender.com/swagger-ui
